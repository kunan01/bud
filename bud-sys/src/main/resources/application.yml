eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

mybatis-plus:
  global-config:
    # 关闭MP3.0自带的banner
    banner: false
    db-config:
      # 主键类型  0:"数据库ID自增",1:"该类型为未设置主键类型", 2:"用户输入ID",3:"全局唯一ID (数字类型唯一ID)", 4:"全局唯一ID UUID",5:"字符串全局唯一ID (idWorker 的字符串表示)"
      id-type: 4
      # 默认数据库表下划线命名
      table-underline: true
  #configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/*Mapper.xml

server:
  port: 8767

spring:
  application:
    name: bud-sys
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  # 数据库连接信息
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/jeecg?characterEncoding=UTF-8&useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    # 连接池的配置信息
    druid:
      # filters: stat,wall,log4j  # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      filter:
        stat:
          slow-sql-millis: 5000
      keep-alive: true
      # 初始化大小，最小，最大
      initial-size: 10
      min-idle: 5
      max-active: 20
      max-wait: 60000 # 配置获取连接等待超时的时间
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
      validation-query: SELECT 1 FROM DUAL # 校验SQL，Oracle配置(如果不配置，下面三项则无效)
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false

  # redis 配置
  redis:
    database: 0
    host: 127.0.0.1
    lettuce:
      pool:
        max-active: 8 #最大连接数据库连接数,设 0 为没有限制
        max-idle: 8 #最大等待连接中的数量,设 0 为没有限制
        max-wait: -1ms #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        min-idle: 0 #最小等待连接中的数量,设 0 为没有限制
      shutdown-timeout: 100ms
    password: ""
    port: 6379

# swagger扫描的路径
WS:
  SCANBASEPACK: com.bud.code.controller

springfox:
  documentation:
    swagger:
      v2:
        path: /bud-sys/api-docs

jwt:
  secret:
    key: kunan01